# .goreleaser.yml
# -----------------------------------------------------------------------------
# GoReleaser Configuration File
# This file defines the build, archive, and release process for CLI applications.
# -----------------------------------------------------------------------------
before:
  hooks:
    # Clean up Go module dependencies to maintain a clean build environment.
    - go mod tidy

builds:
  - # pbc-gen CLI build configuration
    id: "pbc-gen"
    # Main package path for CLI application
    dir: ./cmd/pbc-gen
    # Name of the binary file to be generated
    binary: pbc-gen
    # Application entry point (main) file
    main: .
    # List of supported operating systems and architectures for build
    goos:
      - linux
      - windows
      - darwin # macOS
    goarch:
      - amd64
      - arm64
    # ldflags to apply during build
    # -s: remove symbol table, -w: remove DWARF debugging info to optimize binary size
    # -X: inject version and commit information at build time
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}

archives:
  - # Archive settings for compressing generated binaries
    id: "pbc-gen-archive"
    # Maps to the `id` in builds configuration
    builds:
      - "pbc-gen"
    # Specify archive file name format
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- .Arch }}
    # Archive format to generate (tar.gz and zip)
    format: binary
    # Additional files to include in release
    files:
      - README.md
      - LICENSE

checksum:
  # Generate checksum file to verify integrity of released archives
  name_template: "checksums.txt"
  # Checksum algorithm
  algorithm: sha256

release:
  # GitHub release creation settings
  # Setting draft: true creates the release in draft state for manual publishing
  draft: false
  # prerelease: 'auto' marks as prerelease if version tag contains hyphen (e.g., v1.0.0-beta)
  prerelease: auto
  # Customize release notes title
  name_template: "Release {{.Version}}"
  # Release notes generation settings
  footer: |
    ---
    **Full Changelog**: https://github.com/mrchypark/pocketbase-client/compare/{{ .PreviousTag }}...{{ .Tag }}

changelog:
  # Changelog generation method settings
  # Group by commit message title
  groups:
    - title: "🚀 Features"
      # When commit message prefix is 'feat' or 'feature'
      regexp: '^.*?feat(\(.*\))?:'
      order: 0
    - title: "🐛 Bug Fixes"
      # When commit message prefix is 'fix' or 'bugfix'
      regexp: '^.*?fix(\(.*\))?:'
      order: 1
    - title: "🔧 Maintenance"
      # When commit message prefix is 'chore', 'refactor', 'style', 'test', 'docs', 'build', 'ci'
      regexp: '^.*?(chore|refactor|style|test|docs|build|ci)(\(.*\))?:'
      order: 2
  # Exclude specific commits from changelog
  filters:
    # Exclude commits containing 'Signed-off-by' line (typically merge commits)
    exclude:
      - '(?i)signed-off-by'
      - '^test:'
      - '^Merge '